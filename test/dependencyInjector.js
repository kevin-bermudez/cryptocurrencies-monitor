const customError = require('../src/exceptions/customError')
const codeErrors = require('../src/exceptions/codeErrors')
const serviceLocator = require('../src/serviceLocator')()
const passwordIsValid = require('../src/services/users/passwordIsValid')
const favoriteCurrencyIsValid = require('../src/services/users/favoriteCurrencyIsValid')
const favoriteCurrencies = require('../src/utils/enums/favoriteCurrencies')
const createToken = require('../src/utils/createToken')
const handleCryptText = require('../src/utils/handleCryptText')
const userFilterMock = require('./mocks/userFilter')
const handleErrorsServices = require('../src/utils/handlerErrorsServices')
const requestHttp = require('../src/utils/requestHttp')
const keys = require('../src/config/keys')
serviceLocator.register('exceptions.customError', customError)
serviceLocator.register('exceptions.codeErrors', codeErrors)
serviceLocator.register('services.passwordIsValid', passwordIsValid)
serviceLocator.register('services.favoriteCurrencyIsValid', favoriteCurrencyIsValid)
serviceLocator.register('utils.handleCryptText', handleCryptText)
serviceLocator.register('utils.favoriteCurrencies', favoriteCurrencies)
serviceLocator.register('filters.user', userFilterMock)
serviceLocator.register('repositories.user', { createUser: jest.fn() })
serviceLocator.register('utils.createToken', createToken)
serviceLocator.register('utils.handleErrorsServices', handleErrorsServices)
serviceLocator.register('utils.requestHttp', requestHttp)
serviceLocator.register('config.keys', keys)

module.exports = serviceLocator
